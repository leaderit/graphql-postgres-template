server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location = / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy_read_timeout 60s;
    # proxy_send_timeout 60s;
    # proxy_socket_keepalive on;
    
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    # client_max_body_size 100m;

    # Ссылка на скачивание файлов с проверкой прав доступа
    location /storage/ {
        proxy_pass http://backend:3000/api/storage/access/;
        proxy_redirect     off;
    }

    # Внутренняя ссылка на скачивание файлов после проверки 
    # прав доступа, переадресуется только к тем файлам, к которым доступ разрешен
    location /files/ {
        alias /storage/;        
        internal;
    }

    # Ссылка на загрузку файлов с проверкой прав доступа
    location /up {

    }


    # Upload form should be submitted to this location
    location /upload {
        # Pass altered request body to this location
        upload_pass /test;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        # upload_store /usr/share/nginx/html/tmp 1;
        # upload_store /usr/share/nginx/html/tmp;
        upload_store /storage/tmp;

        # Allow uploaded files to be read only by user
        upload_store_access user:r;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        # upload_pass_form_field "^submit$|^description$|^file_id$";
        upload_pass_form_field "submit";
        upload_pass_form_field "description";
        upload_pass_form_field "file_id";
        upload_cleanup 400 404 499 500-505;

        # upload_pass_form_field "^X-Progress-ID$|^authenticity_token$";
        # track_uploads proxied 30s;
    }

    # Pass altered request body to a backend
    location /test {
        proxy_pass http://backend:3000/api/media/uploaded;
    }

    # Pass graphql requests to hasura
    location /graphql {
        proxy_pass http://graphql-engine:8080/v1/graphql;       
    }

    # Pass to hasura console
    location /hasura/ {
        proxy_pass http://graphql-engine:8080/;      
    }

    # Pass api requests to backend
    location /api/ {
        proxy_pass http://backend:3000/api/;        
    }
    
}

