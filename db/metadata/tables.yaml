- table:
    schema: public
    name: applications
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - client_id
      - client_secret
      - id
      filter:
        _and:
        - client_id:
            _eq: X-Hasura-Client
        - client_secret:
            _eq: X-Hasura-Client-Secret
      limit: 1
- table:
    schema: public
    name: files
  object_relationships:
  - name: org
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: orgs
        column_mapping:
          org_id: id
  - name: owner
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: users
        column_mapping:
          owner_id: id
- table:
    schema: public
    name: orgs
  array_relationships:
  - name: files
    using:
      foreign_key_constraint_on:
        column: org_id
        table:
          schema: public
          name: files
  - name: users
    using:
      foreign_key_constraint_on:
        column: org_id
        table:
          schema: public
          name: orgusers
- table:
    schema: public
    name: orgusers
  object_relationships:
  - name: org
    using:
      foreign_key_constraint_on: org_id
  - name: role
    using:
      foreign_key_constraint_on: role_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
- table:
    schema: public
    name: roles
  array_relationships:
  - name: users
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: users
        column_mapping:
          id: role_id
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - access
      - id
      - name
      filter: {}
      limit: 1
  - role: user
    permission:
      columns:
      - access
      - id
      - name
      filter:
        id:
          _gte: 1000
- table:
    schema: public
    name: users
  object_relationships:
  - name: org
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: orgs
        column_mapping:
          org_id: id
  - name: role
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: roles
        column_mapping:
          role_id: id
  array_relationships:
  - name: files
    using:
      foreign_key_constraint_on:
        column: owner_id
        table:
          schema: public
          name: files
  - name: orgs
    using:
      manual_configuration:
        remote_table:
          schema: public
          name: orgs
        column_mapping:
          id: owner_id
  - name: users
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: orgusers
  insert_permissions:
  - role: orgadmin
    permission:
      check: {}
      set:
        org_id: x-hasura-Org-Id
      columns:
      - role_id
      - login
      - name
      - password
      - created_at
      - updated_at
      - id
      - org_id
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - created_at
      - id
      - login
      - name
      - password
      - role_id
      - updated_at
      filter:
        _and:
        - login:
            _eq: X-Hasura-Login
        - password:
            _eq: X-Hasura-Password
      limit: 1
      allow_aggregations: true
  - role: manager
    permission:
      columns: []
      filter: {}
  - role: orgadmin
    permission:
      columns:
      - role_id
      - login
      - name
      - password
      - created_at
      - updated_at
      - id
      - org_id
      filter: {}
  - role: owner
    permission:
      columns:
      - created_at
      - id
      - login
      - name
      - org_id
      - password
      - role_id
      - updated_at
      filter:
        id:
          _eq: X-Hasura-User-Id
      limit: 1
  - role: user
    permission:
      columns:
      - created_at
      - id
      - login
      - name
      - org_id
      - password
      - role_id
      - updated_at
      filter:
        id:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: orgadmin
    permission:
      columns:
      - role_id
      - login
      - name
      - password
      - created_at
      - updated_at
      - id
      - org_id
      filter: {}
      check: null
  delete_permissions:
  - role: orgadmin
    permission:
      filter: {}
  event_triggers:
  - name: users
    definition:
      enable_manual: true
      insert:
        columns: '*'
      delete:
        columns: '*'
      update:
        columns:
        - login
        - name
        - password
    retry_conf:
      num_retries: 3
      interval_sec: 10
      timeout_sec: 5
    webhook: '{{EVENTS_BASE_URL}}/user'
