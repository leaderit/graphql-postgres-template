type Mutation {
  askcode (
    action: String!
  ): ConfirmationCode
}


type Mutation {
  cancelcode (
    code_id: String!
  ): CancelCode
}


type Query {
  fileurl (
    file_id: uuid!
  ): UrlOutput
}


type Query {
  hello : HelloOutput
}


type Query {
  login (
    grant_type: String
    scope: String
    client_id: String
    client_secret: String
    username: String!
    password: String!
  ): Profile
}


type Query {
  logout : Result
}


type Query {
  profile : ProfileOutput
}


type Query {
  register (
    client_id: String
    client_secret: String
    org_id: uuid
    scope: String
    login: String!
    password: String!
    password2: String!
  ): Profile
}


type Query {
  storage_files (
    storage: String!
    path: String!
  ): [File]
}


type Query {
  storage_fileurl (
    storage: String!
    path: String!
    name: String!
  ): FileUrl
}


type Query {
  storage_newfile (
    storage: String!
    path: String!
    name: String
  ): NewFile
}


type Query {
  storages : [Storages]
}


type Query {
  token (
    client: String
    client_secret: String
    refresh_token: String
  ): Profile
}


type Query {
  unregister (
    code: String
  ): Result
}


type Mutation {
  upload (
    file_id: uuid!
    offset: Int
    length: Int!
    slice: String!
  ): Result
}




input LoginInput {
  username : String!
  password : String!
}

input LogoutInput {
  accessToken : String!
}

input RegisterInput {
  client_id : String
  client_secret : String
  scope : String
  username : String!
  password : String!
}

type HelloOutput {
  greeting : String!
}

type Profile {
  success : Boolean
  error : String
  access_token : String
  refresh_token : String
  token_type : String
  expires_in : Int
  user_id : uuid
}

type ProfileOutput {
  user_id : uuid
}

type RegisterOutput {
  accessToken : String!
}

type Result {
  success : Boolean
  error : String
}

type UrlOutput {
  file_id : uuid!
  url : String
}

type ConfirmationCode {
  code_id : String
  action : String!
  code : String
}

type CancelCode {
  success : Boolean!
}

type StorageOutput {
  file_id : uuid!
  url : String
  result : String
}

type StorageBuckets {
  name : String!
  creationDate : String
}

type Storages {
  name : String
  creationDate : String
}

type Files {
  name : String!
}

type File {
  name : String!
  size : Int
  is_directory : Boolean
}

type NewFile {
  url : String
}

type FileUrl {
  url : String!
}

